version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: workoutbuddy_db
    environment:
      POSTGRES_DB: workoutbuddy
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: mypassword
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d workoutbuddy"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ML Backend API
  ml_backend:
    build: 
      context: ../ml_backend
      dockerfile: Dockerfile
    container_name: workoutbuddy_backend
    environment:
      - DATABASE_URL=postgresql://admin:mypassword@db:5432/workoutbuddy
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../ml_backend:/app
      - ml_models:/app/models
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: unless-stopped

  # Redis for caching (optional)
  redis:
    image: redis:7-alpine
    container_name: workoutbuddy_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # Jupyter Notebook for ML development
  jupyter:
    build: 
      context: ../ml_backend
      dockerfile: Dockerfile
    container_name: workoutbuddy_jupyter
    command: jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token=''
    environment:
      - DATABASE_URL=postgresql://admin:mypassword@db:5432/workoutbuddy
      - PYTHONPATH=/app
    ports:
      - "8888:8888"
    depends_on:
      - db
    volumes:
      - ../docs:/app/notebooks
      - ../ml_backend:/app
      - ml_models:/app/models

volumes:
  postgres_data:
  redis_data:
  ml_models: 