"""create complete schema with all required tables

Revision ID: 1e63cee4a874
Revises: 0c205c78dec4
Create Date: 2025-06-29 12:03:30.464635

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1e63cee4a874'
down_revision: Union[str, None] = '0c205c78dec4'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exercises',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('primary_muscle', sa.Enum('CHEST', 'BACK', 'SHOULDERS', 'BICEPS', 'TRICEPS', 'LEGS', 'GLUTES', 'CORE', 'CARDIO', 'FULL_BODY', name='musclegroup'), nullable=False),
    sa.Column('secondary_muscles', sa.String(), nullable=True),
    sa.Column('equipment', sa.Enum('NONE', 'BARBELL', 'DUMBBELL', 'KETTLEBELL', 'MACHINE', 'CABLE', 'BANDS', 'BODYWEIGHT', 'CARDIO_MACHINE', 'OTHER', name='equipment'), nullable=False),
    sa.Column('exercise_type', sa.Enum('STRENGTH', 'CARDIO', 'FLEXIBILITY', 'BALANCE', 'PLYOMETRIC', name='exercisetype'), nullable=False),
    sa.Column('difficulty', sa.Integer(), nullable=True),
    sa.Column('instructions', sa.Text(), nullable=True),
    sa.Column('tips', sa.Text(), nullable=True),
    sa.Column('video_url', sa.String(), nullable=True),
    sa.Column('is_distance_based', sa.Boolean(), nullable=True),
    sa.Column('is_time_based', sa.Boolean(), nullable=True),
    sa.Column('mets', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_exercises_equipment'), 'exercises', ['equipment'], unique=False)
    op.create_index(op.f('ix_exercises_id'), 'exercises', ['id'], unique=False)
    op.create_index(op.f('ix_exercises_name'), 'exercises', ['name'], unique=True)
    op.create_index(op.f('ix_exercises_primary_muscle'), 'exercises', ['primary_muscle'], unique=False)
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('hashed_password', sa.String(), nullable=False),
    sa.Column('full_name', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('is_verified', sa.Boolean(), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('height', sa.Float(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('fitness_goal', sa.Enum('WEIGHT_LOSS', 'MUSCLE_GAIN', 'STRENGTH', 'ENDURANCE', 'GENERAL_FITNESS', 'ATHLETIC_PERFORMANCE', name='fitnessgoal'), nullable=True),
    sa.Column('experience_level', sa.Enum('BEGINNER', 'INTERMEDIATE', 'ADVANCED', 'EXPERT', name='experiencelevel'), nullable=True),
    sa.Column('unit_system', sa.Enum('METRIC', 'IMPERIAL', name='unitsystem'), nullable=True),
    sa.Column('height_unit', sa.Enum('CM', 'INCHES', 'FEET_INCHES', name='heightunit'), nullable=True),
    sa.Column('weight_unit', sa.Enum('KG', 'LBS', name='weightunit'), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    op.create_table('accountability_checkins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('note', sa.Text(), nullable=True),
    sa.Column('completed', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_accountability_checkins_id'), 'accountability_checkins', ['id'], unique=False)
    op.create_table('challenges',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('challenge_type', sa.Enum('WORKOUT', 'NUTRITION', 'SOCIAL', 'CUSTOM', name='challengetype'), nullable=False),
    sa.Column('target_value', sa.Float(), nullable=False),
    sa.Column('target_unit', sa.String(length=20), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('end_date', sa.DateTime(), nullable=False),
    sa.Column('reward_points', sa.Integer(), nullable=True),
    sa.Column('is_public', sa.Boolean(), nullable=True),
    sa.Column('status', sa.Enum('ACTIVE', 'COMPLETED', 'FAILED', 'CANCELLED', name='challengestatus'), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_challenges_id'), 'challenges', ['id'], unique=False)
    op.create_table('community_groups',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('privacy_level', sa.String(), nullable=True),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_community_groups_id'), 'community_groups', ['id'], unique=False)
    op.create_table('friend_invitations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inviter_id', sa.Integer(), nullable=False),
    sa.Column('invitee_email', sa.String(), nullable=False),
    sa.Column('invitation_code', sa.String(), nullable=False),
    sa.Column('invitation_type', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('accepted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['inviter_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invitation_code')
    )
    op.create_index(op.f('ix_friend_invitations_id'), 'friend_invitations', ['id'], unique=False)
    op.create_table('friendships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('friend_id', sa.Integer(), nullable=False),
    sa.Column('is_accepted', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('accepted_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['friend_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id', 'friend_id', name='_user_friend_uc')
    )
    op.create_index(op.f('ix_friendships_id'), 'friendships', ['id'], unique=False)
    op.create_table('privacy_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('show_profile', sa.Boolean(), nullable=True),
    sa.Column('show_workouts', sa.Boolean(), nullable=True),
    sa.Column('show_stats', sa.Boolean(), nullable=True),
    sa.Column('allow_friend_requests', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user_id')
    )
    op.create_index(op.f('ix_privacy_settings_id'), 'privacy_settings', ['id'], unique=False)
    op.create_table('recommendation_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('recommendation_id', sa.String(), nullable=False),
    sa.Column('feedback', sa.Text(), nullable=True),
    sa.Column('rating', sa.Float(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_recommendation_feedback_id'), 'recommendation_feedback', ['id'], unique=False)
    op.create_table('user_blocks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('blocker_id', sa.Integer(), nullable=False),
    sa.Column('blocked_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['blocked_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['blocker_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_blocks_id'), 'user_blocks', ['id'], unique=False)
    op.create_table('user_goals',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('goal_type', sa.String(), nullable=False),
    sa.Column('target_value', sa.Float(), nullable=False),
    sa.Column('current_value', sa.Float(), nullable=True),
    sa.Column('target_date', sa.DateTime(), nullable=True),
    sa.Column('is_achieved', sa.Boolean(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('achieved_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_goals_id'), 'user_goals', ['id'], unique=False)
    op.create_table('user_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('reporter_id', sa.Integer(), nullable=False),
    sa.Column('reported_id', sa.Integer(), nullable=False),
    sa.Column('reason', sa.Enum('SPAM', 'ABUSE', 'HARASSMENT', 'OTHER', name='reportreasonenum'), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('resolved', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['reported_id'], ['users.id'], ),
    sa.ForeignKeyConstraint(['reporter_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_reports_id'), 'user_reports', ['id'], unique=False)
    op.create_table('user_stats',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('date', sa.DateTime(), nullable=True),
    sa.Column('weight', sa.Float(), nullable=True),
    sa.Column('body_fat_percentage', sa.Float(), nullable=True),
    sa.Column('muscle_mass', sa.Float(), nullable=True),
    sa.Column('total_workouts', sa.Integer(), nullable=True),
    sa.Column('total_weight_lifted', sa.Float(), nullable=True),
    sa.Column('total_cardio_distance', sa.Float(), nullable=True),
    sa.Column('total_calories_burned', sa.Float(), nullable=True),
    sa.Column('weight_unit', sa.Enum('KG', 'LBS', name='weightunit'), nullable=True),
    sa.Column('distance_unit', sa.Enum('KM', 'MILES', 'METERS', name='distanceunit'), nullable=True),
    sa.Column('personal_records', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_stats_date'), 'user_stats', ['date'], unique=False)
    op.create_index(op.f('ix_user_stats_id'), 'user_stats', ['id'], unique=False)
    op.create_table('workouts',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('scheduled_date', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.Enum('PLANNED', 'IN_PROGRESS', 'COMPLETED', 'SKIPPED', name='workoutstatus'), nullable=True),
    sa.Column('total_duration', sa.Integer(), nullable=True),
    sa.Column('calories_burned', sa.Float(), nullable=True),
    sa.Column('total_volume', sa.Float(), nullable=True),
    sa.Column('total_distance', sa.Float(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workouts_id'), 'workouts', ['id'], unique=False)
    op.create_index(op.f('ix_workouts_scheduled_date'), 'workouts', ['scheduled_date'], unique=False)
    op.create_table('community_memberships',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=False),
    sa.Column('joined_at', sa.DateTime(), nullable=True),
    sa.Column('is_admin', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['community_groups.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_community_memberships_id'), 'community_memberships', ['id'], unique=False)
    op.create_table('workout_exercises',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('workout_id', sa.Integer(), nullable=False),
    sa.Column('exercise_id', sa.Integer(), nullable=False),
    sa.Column('order', sa.Integer(), nullable=False),
    sa.Column('sets', sa.Integer(), nullable=True),
    sa.Column('reps', sa.String(), nullable=True),
    sa.Column('weight', sa.String(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('distance', sa.Float(), nullable=True),
    sa.Column('speed', sa.Float(), nullable=True),
    sa.Column('incline', sa.Float(), nullable=True),
    sa.Column('rest_time', sa.Integer(), nullable=True),
    sa.Column('actual_reps', sa.String(), nullable=True),
    sa.Column('actual_weight', sa.String(), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('weight_unit', sa.Enum('KG', 'LBS', name='weightunit'), nullable=True),
    sa.Column('distance_unit', sa.Enum('KM', 'MILES', 'METERS', name='distanceunit'), nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercises.id'], ),
    sa.ForeignKeyConstraint(['workout_id'], ['workouts.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_workout_exercises_id'), 'workout_exercises', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_workout_exercises_id'), table_name='workout_exercises')
    op.drop_table('workout_exercises')
    op.drop_index(op.f('ix_community_memberships_id'), table_name='community_memberships')
    op.drop_table('community_memberships')
    op.drop_index(op.f('ix_workouts_scheduled_date'), table_name='workouts')
    op.drop_index(op.f('ix_workouts_id'), table_name='workouts')
    op.drop_table('workouts')
    op.drop_index(op.f('ix_user_stats_id'), table_name='user_stats')
    op.drop_index(op.f('ix_user_stats_date'), table_name='user_stats')
    op.drop_table('user_stats')
    op.drop_index(op.f('ix_user_reports_id'), table_name='user_reports')
    op.drop_table('user_reports')
    op.drop_index(op.f('ix_user_goals_id'), table_name='user_goals')
    op.drop_table('user_goals')
    op.drop_index(op.f('ix_user_blocks_id'), table_name='user_blocks')
    op.drop_table('user_blocks')
    op.drop_index(op.f('ix_recommendation_feedback_id'), table_name='recommendation_feedback')
    op.drop_table('recommendation_feedback')
    op.drop_index(op.f('ix_privacy_settings_id'), table_name='privacy_settings')
    op.drop_table('privacy_settings')
    op.drop_index(op.f('ix_friendships_id'), table_name='friendships')
    op.drop_table('friendships')
    op.drop_index(op.f('ix_friend_invitations_id'), table_name='friend_invitations')
    op.drop_table('friend_invitations')
    op.drop_index(op.f('ix_community_groups_id'), table_name='community_groups')
    op.drop_table('community_groups')
    op.drop_index(op.f('ix_challenges_id'), table_name='challenges')
    op.drop_table('challenges')
    op.drop_index(op.f('ix_accountability_checkins_id'), table_name='accountability_checkins')
    op.drop_table('accountability_checkins')
    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_index(op.f('ix_exercises_primary_muscle'), table_name='exercises')
    op.drop_index(op.f('ix_exercises_name'), table_name='exercises')
    op.drop_index(op.f('ix_exercises_id'), table_name='exercises')
    op.drop_index(op.f('ix_exercises_equipment'), table_name='exercises')
    op.drop_table('exercises')
    # ### end Alembic commands ###
