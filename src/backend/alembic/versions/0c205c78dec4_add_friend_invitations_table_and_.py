"""add friend_invitations table and friendship status

Revision ID: 0c205c78dec4
Revises: social_features_enhancement
Create Date: 2025-06-29 11:49:22.849420

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '0c205c78dec4'
down_revision: Union[str, None] = 'social_features_enhancement'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('friend_invitations',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('inviter_id', sa.Integer(), nullable=False),
    sa.Column('invitee_email', sa.String(), nullable=False),
    sa.Column('invitation_code', sa.String(), nullable=False),
    sa.Column('invitation_type', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('accepted_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['inviter_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('invitation_code')
    )
    op.create_index(op.f('ix_friend_invitations_id'), 'friend_invitations', ['id'], unique=False)
    op.add_column('community_groups', sa.Column('category', sa.String(), nullable=True))
    op.add_column('community_groups', sa.Column('privacy_level', sa.String(), nullable=True))
    op.add_column('community_groups', sa.Column('created_by', sa.Integer(), nullable=True))
    op.create_foreign_key(None, 'community_groups', 'users', ['created_by'], ['id'])
    op.add_column('friendships', sa.Column('status', sa.String(), nullable=True))
    op.alter_column('user_stats', 'weight_unit',
               existing_type=postgresql.ENUM('KG', 'LBS', name='weight_unit'),
               type_=sa.Enum('KG', 'LBS', name='weightunit'),
               comment=None,
               existing_comment='Unit for weight measurements in this record',
               existing_nullable=True,
               existing_server_default=sa.text("'KG'::weight_unit"))
    op.alter_column('user_stats', 'distance_unit',
               existing_type=postgresql.ENUM('KM', 'MILES', 'METERS', name='distance_unit'),
               type_=sa.Enum('KM', 'MILES', 'METERS', name='distanceunit'),
               comment=None,
               existing_comment='Unit for distance measurements in this record',
               existing_nullable=True,
               existing_server_default=sa.text("'KM'::distance_unit"))
    op.alter_column('users', 'unit_system',
               existing_type=postgresql.ENUM('METRIC', 'IMPERIAL', name='unit_system'),
               type_=sa.Enum('METRIC', 'IMPERIAL', name='unitsystem'),
               comment=None,
               existing_comment='User preference for unit system (METRIC/IMPERIAL)',
               existing_nullable=True,
               existing_server_default=sa.text("'METRIC'::unit_system"))
    op.alter_column('users', 'height_unit',
               existing_type=postgresql.ENUM('CM', 'INCHES', 'FEET_INCHES', name='height_unit'),
               type_=sa.Enum('CM', 'INCHES', 'FEET_INCHES', name='heightunit'),
               comment=None,
               existing_comment='Unit for height measurements (CM/INCHES/FEET_INCHES)',
               existing_nullable=True,
               existing_server_default=sa.text("'CM'::height_unit"))
    op.alter_column('users', 'weight_unit',
               existing_type=postgresql.ENUM('KG', 'LBS', name='weight_unit'),
               type_=sa.Enum('KG', 'LBS', name='weightunit'),
               comment=None,
               existing_comment='Unit for weight measurements (KG/LBS)',
               existing_nullable=True,
               existing_server_default=sa.text("'KG'::weight_unit"))
    op.alter_column('workout_exercises', 'weight_unit',
               existing_type=postgresql.ENUM('KG', 'LBS', name='weight_unit'),
               type_=sa.Enum('KG', 'LBS', name='weightunit'),
               comment=None,
               existing_comment='Unit for weight in this exercise',
               existing_nullable=True,
               existing_server_default=sa.text("'KG'::weight_unit"))
    op.alter_column('workout_exercises', 'distance_unit',
               existing_type=postgresql.ENUM('KM', 'MILES', 'METERS', name='distance_unit'),
               type_=sa.Enum('KM', 'MILES', 'METERS', name='distanceunit'),
               comment=None,
               existing_comment='Unit for distance in this exercise',
               existing_nullable=True,
               existing_server_default=sa.text("'METERS'::distance_unit"))
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('workout_exercises', 'distance_unit',
               existing_type=sa.Enum('KM', 'MILES', 'METERS', name='distanceunit'),
               type_=postgresql.ENUM('KM', 'MILES', 'METERS', name='distance_unit'),
               comment='Unit for distance in this exercise',
               existing_nullable=True,
               existing_server_default=sa.text("'METERS'::distance_unit"))
    op.alter_column('workout_exercises', 'weight_unit',
               existing_type=sa.Enum('KG', 'LBS', name='weightunit'),
               type_=postgresql.ENUM('KG', 'LBS', name='weight_unit'),
               comment='Unit for weight in this exercise',
               existing_nullable=True,
               existing_server_default=sa.text("'KG'::weight_unit"))
    op.alter_column('users', 'weight_unit',
               existing_type=sa.Enum('KG', 'LBS', name='weightunit'),
               type_=postgresql.ENUM('KG', 'LBS', name='weight_unit'),
               comment='Unit for weight measurements (KG/LBS)',
               existing_nullable=True,
               existing_server_default=sa.text("'KG'::weight_unit"))
    op.alter_column('users', 'height_unit',
               existing_type=sa.Enum('CM', 'INCHES', 'FEET_INCHES', name='heightunit'),
               type_=postgresql.ENUM('CM', 'INCHES', 'FEET_INCHES', name='height_unit'),
               comment='Unit for height measurements (CM/INCHES/FEET_INCHES)',
               existing_nullable=True,
               existing_server_default=sa.text("'CM'::height_unit"))
    op.alter_column('users', 'unit_system',
               existing_type=sa.Enum('METRIC', 'IMPERIAL', name='unitsystem'),
               type_=postgresql.ENUM('METRIC', 'IMPERIAL', name='unit_system'),
               comment='User preference for unit system (METRIC/IMPERIAL)',
               existing_nullable=True,
               existing_server_default=sa.text("'METRIC'::unit_system"))
    op.alter_column('user_stats', 'distance_unit',
               existing_type=sa.Enum('KM', 'MILES', 'METERS', name='distanceunit'),
               type_=postgresql.ENUM('KM', 'MILES', 'METERS', name='distance_unit'),
               comment='Unit for distance measurements in this record',
               existing_nullable=True,
               existing_server_default=sa.text("'KM'::distance_unit"))
    op.alter_column('user_stats', 'weight_unit',
               existing_type=sa.Enum('KG', 'LBS', name='weightunit'),
               type_=postgresql.ENUM('KG', 'LBS', name='weight_unit'),
               comment='Unit for weight measurements in this record',
               existing_nullable=True,
               existing_server_default=sa.text("'KG'::weight_unit"))
    op.drop_column('friendships', 'status')
    op.drop_constraint(None, 'community_groups', type_='foreignkey')
    op.drop_column('community_groups', 'created_by')
    op.drop_column('community_groups', 'privacy_level')
    op.drop_column('community_groups', 'category')
    op.drop_index(op.f('ix_friend_invitations_id'), table_name='friend_invitations')
    op.drop_table('friend_invitations')
    # ### end Alembic commands ###
